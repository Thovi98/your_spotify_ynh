#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# APP "BUILD" (DEPLOYING SOURCES, VENV, COMPILING ETC)
#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_script_progression --message="Installing dependencies..." --weight=5

ynh_exec_warn_less ynh_install_nodejs --nodejs_version=$nodejs_version

# Upgrade NPM
ynh_npm install --global npm@latest

# Install Yarn
ynh_npm install --global yarn

# Install Typescript
ynh_npm install --global typescript

# Install mongo database
ynh_install_mongo

#=================================================
# CREATE A MONGODB DATABASE
#=================================================
ynh_script_progression --message="Creating a MongoDB database..."

db_name=$(ynh_sanitize_dbid --db_name=$app)
db_user=$db_name
ynh_app_setting_set --app=$app --key=db_name --value=$db_name
ynh_mongo_setup_db --db_user=$db_user --db_name=$db_name


#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Setting up source files..." --weight=1

ynh_setup_source --dest_dir="$install_dir"

chown -R $app:www-data "$install_dir"

#=================================================
# BUILD APP
#=================================================

ynh_add_config --template="../conf/.env" --destination="$install_dir/server/.env"
chmod 600 $install_dir/server/.env

pushd $install_dir/server
    ynh_use_nodejs

	ynh_script_progression --message="Fetching Yarn dev dependencies... This can be very long, be patient !" --weight=18
	ynh_exec_warn_less ynh_exec_as $app env $ynh_node_load_PATH yarn install --network-timeout=100000

	ynh_script_progression --message="Fetching Yarn dev dependencies... This can be very long, be patient !" --weight=18
	ynh_exec_warn_less ynh_exec_as $app env $ynh_node_load_PATH yarn build

	ynh_script_progression --message="Building Yarn dev dependencies... This can be very long, be patient !" --weight=25
	ynh_exec_warn_less ynh_exec_as $app env $ynh_node_load_PATH CLIENT_ENDPOINT=__DOMAIN__:__PORT_FRONT__ API_ENDPOINT=__DOMAIN__:__PORT_API__ SPOTIFY_PUBLIC=__PUBLIC_KEY__ SPOTIFY_SECRET=__SECRET_KEY__ MONGO_ENDPOINT=mongodb://localhost:27017/__DB_NAME__ yarn migrate
	
	ynh_script_progression --message="Cleaning cache... " --weight=3
	ynh_exec_warn_less sudo -u $app env $ynh_node_load_PATH yarn cache clean 2>&1

popd


pushd $install_dir/client
    ynh_use_nodejs

	ynh_script_progression --message="Fetching Yarn dev dependencies... This can be very long, be patient !" --weight=18
	ynh_exec_warn_less ynh_exec_as $app env $ynh_node_load_PATH yarn install --network-timeout=100000

        ynh_script_progression --message="Fetching Yarn dev dependencies... This can be very long, be patient !" --weight=18
	ynh_exec_warn_less ynh_exec_as $app env $ynh_node_load_PATH yarn build

	ynh_script_progression --message="Building Yarn dev dependencies... This can be very long, be patient !" --weight=25
	ynh_exec_warn_less ynh_exec_as $app env $ynh_node_load_PATH yarn run build
	
	ynh_script_progression --message="Cleaning cache... " --weight=3
	ynh_exec_warn_less sudo -u $app env $ynh_node_load_PATH yarn cache clean 2>&1

popd

chmod 750 "$install_dir"
chmod -R o-rwx "$install_dir"
chown -R $app:$app "$install_dir"

#=================================================
# SYSTEM CONFIGURATION
#=================================================
ynh_script_progression --message="Adding system configurations related to $app..." --weight=1

# Create a dedicated NGINX config using the conf/nginx.conf template
ynh_add_nginx_config

# Create a dedicated systemd config
ynh_add_systemd_config

yunohost service add $app --description=" Self hosted Spotify tracking dashboard " --log="/var/log/$app/$app.log"

# Use logrotate to manage application logfile(s)
ynh_use_logrotate

# Create a dedicated Fail2Ban config
# ynh_add_fail2ban_config --logpath="/var/log/nginx/${domain}-error.log" --failregex="Regex to match into the log for a failed login"

#=================================================
# APP INITIAL CONFIGURATION
#=================================================
# ADD A CONFIGURATION
#=================================================
ynh_script_progression --message="Adding a configuration file..." --weight=1

### You can add specific configuration files.
###
### Typically, put your template conf file in ../conf/your_config_file
### The template may contain strings such as __FOO__ or __FOO_BAR__,
### which will automatically be replaced by the values of $foo and $foo_bar
###
### ynh_add_config will also keep track of the config file's checksum,
### which later during upgrade may allow to automatically backup the config file
### if it's found that the file was manually modified
###
### Check the documentation of `ynh_add_config` for more info.

ynh_add_config --template="some_config_file" --destination="$install_dir/some_config_file"

# FIXME: this should be handled by the core in the future
# You may need to use chmod 600 instead of 400,
# for example if the app is expected to be able to modify its own config
chmod 400 "$install_dir/some_config_file"
chown $app:$app "$install_dir/some_config_file"

### For more complex cases where you want to replace stuff using regexes,
### you shoud rely on ynh_replace_string (which is basically a wrapper for sed)
### When doing so, you also need to manually call ynh_store_file_checksum
###
### ynh_replace_string --match_string="match_string" --replace_string="replace_string" --target_file="$install_dir/some_config_file"
### ynh_store_file_checksum --file="$install_dir/some_config_file"

#=================================================
# GENERIC FINALIZATION
#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..." --weight=1

### `ynh_systemd_action` is used to start a systemd service for an app.
### Only needed if you have configure a systemd service
### If you're not using these lines:
###		- Remove the section "STOP SYSTEMD SERVICE" and "START SYSTEMD SERVICE" in the backup script
###		- As well as the section "START SYSTEMD SERVICE" in the restore script
###		- As well as the section"STOP SYSTEMD SERVICE" and "START SYSTEMD SERVICE" in the upgrade script
###		- And the section "STOP SYSTEMD SERVICE" and "START SYSTEMD SERVICE" in the change_url script

# Start a systemd service
ynh_systemd_action --service_name=$app --action="start" --log_path="/var/log/$app/$app.log"

#=================================================
# END OF SCRIPT
#=================================================
ynh_script_progression --message="Installation of $app completed" --last
